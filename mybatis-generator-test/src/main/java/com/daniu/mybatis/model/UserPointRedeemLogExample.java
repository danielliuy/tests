package com.daniu.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserPointRedeemLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public UserPointRedeemLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andGrantsPointIsNull() {
            addCriterion("grants_point is null");
            return (Criteria) this;
        }

        public Criteria andGrantsPointIsNotNull() {
            addCriterion("grants_point is not null");
            return (Criteria) this;
        }

        public Criteria andGrantsPointEqualTo(Integer value) {
            addCriterion("grants_point =", value, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointNotEqualTo(Integer value) {
            addCriterion("grants_point <>", value, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointGreaterThan(Integer value) {
            addCriterion("grants_point >", value, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointGreaterThanOrEqualTo(Integer value) {
            addCriterion("grants_point >=", value, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointLessThan(Integer value) {
            addCriterion("grants_point <", value, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointLessThanOrEqualTo(Integer value) {
            addCriterion("grants_point <=", value, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointIn(List<Integer> values) {
            addCriterion("grants_point in", values, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointNotIn(List<Integer> values) {
            addCriterion("grants_point not in", values, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointBetween(Integer value1, Integer value2) {
            addCriterion("grants_point between", value1, value2, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsPointNotBetween(Integer value1, Integer value2) {
            addCriterion("grants_point not between", value1, value2, "grantsPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointIsNull() {
            addCriterion("real_point is null");
            return (Criteria) this;
        }

        public Criteria andRealPointIsNotNull() {
            addCriterion("real_point is not null");
            return (Criteria) this;
        }

        public Criteria andRealPointEqualTo(Integer value) {
            addCriterion("real_point =", value, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointNotEqualTo(Integer value) {
            addCriterion("real_point <>", value, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointGreaterThan(Integer value) {
            addCriterion("real_point >", value, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointGreaterThanOrEqualTo(Integer value) {
            addCriterion("real_point >=", value, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointLessThan(Integer value) {
            addCriterion("real_point <", value, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointLessThanOrEqualTo(Integer value) {
            addCriterion("real_point <=", value, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointIn(List<Integer> values) {
            addCriterion("real_point in", values, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointNotIn(List<Integer> values) {
            addCriterion("real_point not in", values, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointBetween(Integer value1, Integer value2) {
            addCriterion("real_point between", value1, value2, "realPoint");
            return (Criteria) this;
        }

        public Criteria andRealPointNotBetween(Integer value1, Integer value2) {
            addCriterion("real_point not between", value1, value2, "realPoint");
            return (Criteria) this;
        }

        public Criteria andGrantsCountIsNull() {
            addCriterion("grants_count is null");
            return (Criteria) this;
        }

        public Criteria andGrantsCountIsNotNull() {
            addCriterion("grants_count is not null");
            return (Criteria) this;
        }

        public Criteria andGrantsCountEqualTo(Integer value) {
            addCriterion("grants_count =", value, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountNotEqualTo(Integer value) {
            addCriterion("grants_count <>", value, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountGreaterThan(Integer value) {
            addCriterion("grants_count >", value, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("grants_count >=", value, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountLessThan(Integer value) {
            addCriterion("grants_count <", value, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountLessThanOrEqualTo(Integer value) {
            addCriterion("grants_count <=", value, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountIn(List<Integer> values) {
            addCriterion("grants_count in", values, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountNotIn(List<Integer> values) {
            addCriterion("grants_count not in", values, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountBetween(Integer value1, Integer value2) {
            addCriterion("grants_count between", value1, value2, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andGrantsCountNotBetween(Integer value1, Integer value2) {
            addCriterion("grants_count not between", value1, value2, "grantsCount");
            return (Criteria) this;
        }

        public Criteria andRealCountIsNull() {
            addCriterion("real_count is null");
            return (Criteria) this;
        }

        public Criteria andRealCountIsNotNull() {
            addCriterion("real_count is not null");
            return (Criteria) this;
        }

        public Criteria andRealCountEqualTo(Integer value) {
            addCriterion("real_count =", value, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountNotEqualTo(Integer value) {
            addCriterion("real_count <>", value, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountGreaterThan(Integer value) {
            addCriterion("real_count >", value, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("real_count >=", value, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountLessThan(Integer value) {
            addCriterion("real_count <", value, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountLessThanOrEqualTo(Integer value) {
            addCriterion("real_count <=", value, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountIn(List<Integer> values) {
            addCriterion("real_count in", values, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountNotIn(List<Integer> values) {
            addCriterion("real_count not in", values, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountBetween(Integer value1, Integer value2) {
            addCriterion("real_count between", value1, value2, "realCount");
            return (Criteria) this;
        }

        public Criteria andRealCountNotBetween(Integer value1, Integer value2) {
            addCriterion("real_count not between", value1, value2, "realCount");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_point_redeem_log
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}